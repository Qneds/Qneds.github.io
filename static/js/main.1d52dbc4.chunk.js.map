{"version":3,"sources":["components/students/Support.js","data/data.js","components/students/AddUser.js","components/students/Search.js","components/groups/Support.js","components/groups/GroupSearch.js","components/groups/AddMember.js","components/groups/MemberSearch.js","components/groups/AddGroup.js","components/students/EditUser.js","components/groups/EditGroup.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["hashCode","str","hash","length","i","charCodeAt","Student","name","desc","email","tags","this","TagBox","props","className","tag","StudentBox","tagList","split","map","it","style","NumberOfFoundedStudnets","numberOfStudent","AddStudentBox","id","type","aria-label","value","newNameValue","onChange","handleOnNameChange","newDescValue","handleOnDescChange","newEmailValue","handleOnEmailChange","newTagsValue","handleOnTagsChange","USER_ID","TEMPLATE_ID_GROUP","TEMPLATE_ID_STUDENT","SERVICE_ID","AddUser","state","showWarning","errorMessage","handleNameEntry","event","setState","target","handleDescEntry","handleEmailEntry","handleTaggsEntry","addStudent","student","students","found","path","window","location","hostname","port","emailjs","send","Data","receiver","message","then","res","addStudentToList","catch","err","color","onClick","Component","Search","handleDescSearchEntry","descSearch","handleTagSearchEntry","tagSearch","list","outpuList","element","includes","push","tagsFromSearch","arrayLength","exit","j","getStudentsList","out","searchUpdate","myList","onInput","aria-describedby","AddGroupBox","NumberOfMembers","amountOfMembers","NumberOfGroups","amountOfGroups","MemberBox","removeMember","SmallMemberBox","GroupBox","memberList","members","GroupSearch","outputList","getGroupList","AddMember","AddMemberToGroup","addMember","AddMemberBox","MemberSearch","handleNameSearchEntry","nameSearch","AddGroup","concat","AddNewGroup","group","groups","addGroup","removeMemberFromList","obj","array","index","findIndex","o","splice","addGroupToList","EditUser","prevEmail","saveStudent","save","params","search","substring","console","log","paramV","param","EditGroup","SaveGroup","init","Main","sList","localStorage","getItem","JSON","parse","setItem","stringify","gList","saveGroup","exact","App","basename","process","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d52dbc4.chunk.js","sourcesContent":["import { React, Component } from 'react';\r\n\r\nimport '../../styles/styleStudents.css';\r\n\r\nexport function hashCode(str) {\r\n    let hash = 0;\r\n    if (str.length == 0) return hash;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let char = str.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport class Student {\r\n    constructor(name, desc, email, tags) {\r\n      this.name = name;\r\n      this.desc = desc;\r\n      this.email = email;\r\n      this.tags = tags;\r\n    }\r\n}\r\n\r\nexport const TagBox = (props) => {\r\n    return (\r\n        <div className=\"tag\">\r\n            {props.tag}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const StudentBox = (props) => {\r\n\r\n    let tags = props.tags.split(/[\\s,]+/);\r\n\r\n    const tagList = tags.map(it => (\r\n        <TagBox tag={it} key={hashCode(it)} />\r\n    ));\r\n\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className=\"name\">\r\n                {props.name}\r\n            </div>\r\n            <div className=\"desc\">\r\n                {props.desc}\r\n            </div>\r\n            <div className=\"email\">\r\n                Kontakt: {props.email}\r\n            </div>\r\n            <div className=\"tags\">\r\n                <div style={{\"width\" : \"100%\"}}>\r\n                    Tagi:\r\n                </div>\r\n                <div>\r\n                    {tagList}\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport const NumberOfFoundedStudnets = (props) => {\r\n    return (\r\n        <div className=\"found_el\">\r\n            Znaleziono {props.numberOfStudent} studentów\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AddStudentBox = (props) => {\r\n    return (\r\n        <div className= \"space\">\r\n\r\n            <div className=\"container cont\">\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Imie:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newName\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.newNameValue}\r\n                    onChange={props.handleOnNameChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Opis:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newDesc\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.newDescValue}\r\n                    onChange={props.handleOnDescChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Email:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newEmail\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.newEmailValue}\r\n                    onChange={props.handleOnEmailChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Tagi:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newName\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"Small\"\r\n                    value={props.newTagsValue}\r\n                    onChange={props.handleOnTagsChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","export default {\r\n    USER_ID: `user_x4pDW9FXgyFLSOGlZ5YgP`, //userID\r\n    TEMPLATE_ID_GROUP: `template_ogrbdbr`,\r\n    TEMPLATE_ID_STUDENT: `template_d087a6k`,\r\n    SERVICE_ID: 'service_oxqsg38'\r\n    }","import { React, Component } from 'react';\r\nimport {Student, AddStudentBox} from './Support';\r\n\r\nimport Data from '../../data/data';\r\n\r\nimport '../../styles/styleStudents.css';\r\n\r\nimport emailjs from 'emailjs-com';\r\n\r\nclass AddUser extends Component {\r\n\r\n    state = {\r\n        newNameValue: \"\",\r\n        newDescValue: \"\",\r\n        newEmailValue: \"\",\r\n        newTagsValue: \"\",\r\n        showWarning: false\r\n    }\r\n    errorMessage = \"Student z danym e-mailem już istnieje lub email jest nipoprawny.\"\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addStudentToList = props.addStudent;\r\n    }\r\n\r\n    handleNameEntry = (event) => {\r\n        this.setState({\r\n            newNameValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleDescEntry = (event) => {\r\n        this.setState({\r\n            newDescValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleEmailEntry = (event) => {\r\n        this.setState({\r\n            newEmailValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleTaggsEntry = (event) => {\r\n        this.setState({\r\n            newTagsValue: event.target.value\r\n        });\r\n    }\r\n\r\n    addStudent = (event) => {\r\n\r\n        let student = new Student(this.state.newNameValue, this.state.newDescValue, this.state.newEmailValue,  this.state.newTagsValue)\r\n\r\n        if(this.state.newNameValue === \"\" || this.state.newDescValue === \"\" || this.state.newEmailValue === \"\" ||  this.state.newTagsValue === \"\")\r\n            return;\r\n\r\n        let students = this.props.students();\r\n\r\n        let found = false;\r\n        for(var i = 0; i < students.length; i++) {\r\n            if (students[i].email === student.email && students[i].name === student.name) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(found){\r\n            this.setState({\r\n                showWarning: true\r\n            });\r\n        } else {\r\n            let path = window.location.hostname + \":\" + window.location.port + \"/editStudent?id=\" + students.length\r\n\r\n            emailjs.send(\r\n                Data.SERVICE_ID, Data.TEMPLATE_ID_STUDENT,\r\n                {   \r\n                    name: this.state.newNameValue, \r\n                    receiver: this.state.newEmailValue,\r\n                    message: path\r\n                }, Data.USER_ID\r\n\r\n            ).then(res => {\r\n                this.setState({\r\n                    newNameValue: \"\",\r\n                    newDescValue: \"\",\r\n                    newEmailValue: \"\",\r\n                    newTagsValue: \"\",\r\n                    showWarning: false\r\n                });\r\n                this.addStudentToList(student)\r\n            }).catch(err => {\r\n                this.setState({\r\n                    showWarning: true\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // it => ( )\r\n    render() {\r\n        return (\r\n            //React.Fragment\r\n            <>\r\n                <div className=\"frame\">\r\n                    <h2>Dodawanie nowego studenta</h2>\r\n                    <AddStudentBox\r\n                    newNameValue={this.state.newNameValue}\r\n                    handleOnNameChange={this.handleNameEntry}\r\n\r\n\r\n                    newDescValue={this.state.newDescValue}\r\n                    handleOnDescChange={this.handleDescEntry}\r\n\r\n\r\n                    newEmailValue={this.state.newEmailValue}\r\n                    handleOnEmailChange={this.handleEmailEntry}\r\n  \r\n                    newTagsValue={this.state.newTagsValue}\r\n                    handleOnTagsChange={this.handleTaggsEntry}\r\n                    />\r\n                    {this.state.showWarning && <h3 style={{color: \"red\"}}>{this.errorMessage}</h3> }\r\n\r\n                    <button className=\"btn btn-primary\" onClick={this.addStudent}>Dodaj studenta</button>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUser;","import { React, Component } from 'react';\r\nimport {StudentBox, hashCode, NumberOfFoundedStudnets} from './Support';\r\n\r\nimport '../../styles/styleStudents.css';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n     \r\n        this.state = {\r\n            descSearch: \"\",\r\n            tagSearch: \"\",\r\n        };\r\n    }\r\n    handleDescSearchEntry = (event) => {\r\n        this.setState({\r\n            descSearch: event.target.value\r\n        });\r\n    }\r\n\r\n    handleTagSearchEntry = (event) => {\r\n        this.setState({\r\n            tagSearch: event.target.value\r\n        });\r\n    }\r\n\r\n    searchUpdate(list) {\r\n\r\n        let outpuList = [];\r\n\r\n        if(this.state.descSearch === \"\" && this.state.tagSearch === \"\")\r\n            return list;\r\n\r\n        for(let element of list) {\r\n\r\n            if(this.state.descSearch !== \"\" && element.desc.includes(this.state.descSearch)) {\r\n                outpuList.push(element);\r\n            } else if(this.state.tagSearch !== \"\") {\r\n                let tags = element.tags.split(/[\\s,]+/);\r\n\r\n                let tagsFromSearch = this.state.tagSearch.split(/[\\s,]+/);\r\n\r\n                var arrayLength = tagsFromSearch.length;\r\n                for (let i = 0; i < tags.length; i++){\r\n                    let exit = false;\r\n                    for (let j = 0; j < arrayLength; j++) {\r\n                        if(tags[i].includes(tagsFromSearch[j])){\r\n                            outpuList.push(element);\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (exit) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return outpuList;\r\n    }\r\n\r\n    render() {\r\n\r\n        let list = this.props.getStudentsList();\r\n\r\n\r\n        let out = this.searchUpdate(list);\r\n\r\n        const myList = out.map(it => (\r\n            <StudentBox name={it.name} desc={it.desc} email={it.email} tags={it.tags} key={hashCode(it.email + it.name)} />\r\n        ));\r\n\r\n        return (\r\n            //React.Fragment\r\n            <>\r\n                <div className=\"frame\">\r\n                    <div className=\"container cont\">\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Wyszukuj po opisie</span>\r\n                            </div>\r\n                            <input type=\"text\" name=\"descSearch\" value={this.state.descSearch} id=\"searchDesc\" className=\"form-control\" aria-label=\"Small\" onInput={this.handleDescSearchEntry} aria-describedby=\"inputGroup-sizing-sm\"/>\r\n                        </div>\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Wyszukuj po tagach</span>\r\n                            </div>\r\n                            <input type=\"text\" name=\"tagSearch\" value={this.state.tagSearch} id=\"searchTags\" className=\"form-control\" aria-label=\"Small\" onInput={this.handleTagSearchEntry} aria-describedby=\"inputGroup-sizing-sm\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <NumberOfFoundedStudnets numberOfStudent={out.length}/>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"frame\">\r\n                    <ul className=\"list-group\">\r\n                        {myList}\r\n                    </ul>\r\n                </div>\r\n                \r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import { React, Component } from 'react';\r\nimport {TagBox} from '../students/Support';\r\n\r\nimport '../../styles/styleGroups.css'\r\n\r\nexport function hashCode(str) {\r\n    let hash = 0;\r\n    if (str.length == 0) return hash;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let char = str.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\n\r\nexport const AddGroupBox = (props) => {\r\n    return (\r\n        <div className= \"space\">\r\n\r\n            <div className=\"container cont\">\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Nazwa:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newName\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.newNameValue}\r\n                    onChange={props.handleOnNameChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Opis:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newDesc\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.newDescValue}\r\n                    onChange={props.handleOnDescChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Email:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newEmail\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.newEmailValue}\r\n                    onChange={props.handleOnEmailChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Tagi:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newName\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"Small\"\r\n                    value={props.newTagsValue}\r\n                    onChange={props.handleOnTagsChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport const NumberOfMembers = (props) => {\r\n    return (\r\n        <div className=\"found_el\">\r\n            Znaleziono {props.amountOfMembers} członków\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const NumberOfGroups = (props) => {\r\n    return (\r\n        <div className=\"found_el\">\r\n            Znaleziono {props.amountOfGroups} grup\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MemberBox = (props) => {\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className=\"name\">\r\n                {props.name}\r\n            </div>\r\n            <div className=\"email\">\r\n                Kontakt: {props.email}\r\n            </div>\r\n            <button className=\"btn btn-danger\" onClick={() => props.removeMember(props.name, props.email)}>Usuń członka</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst SmallMemberBox = (props) => {\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div>\r\n                <div className=\"small-member-name\">\r\n                    {props.name}\r\n                </div>\r\n                <div className=\"small-member-email\">\r\n                    Kontakt: {props.email}\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport const GroupBox = (props) => {\r\n    let tags = props.tags.split(/[\\s,]+/);\r\n\r\n    const tagList = tags.map(it => (\r\n        <TagBox tag={it} key={hashCode(it)} />\r\n    ));\r\n\r\n    const memberList = props.members.map(it => (\r\n        <SmallMemberBox name={it.name} email={it.email} key={hashCode(it.email + it.name)}/>\r\n    ));\r\n\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className=\"name\">\r\n                {props.name}\r\n            </div>\r\n            <div className=\"desc\">\r\n                {props.desc}\r\n            </div>\r\n            <div className=\"email\">\r\n                Kontakt: {props.email}\r\n            </div>\r\n            <div className=\"tags\">\r\n                <div style={{\"width\" : \"100%\"}}>\r\n                    Poszukujemy ludzi znających:\r\n                </div>\r\n                <div>\r\n                    {tagList}\r\n                </div>\r\n            </div>\r\n            <div className=\"tags\">\r\n                <div style={{\"width\" : \"100%\"}}>\r\n                    Nasz skład:\r\n                </div>\r\n                <div>\r\n                    <ul className=\"list-group\">\r\n                        {memberList}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import { React, Component } from 'react';\r\n\r\nimport {hashCode, NumberOfGroups, GroupBox} from './Support'\r\n\r\nclass GroupSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n     \r\n        this.state = {\r\n            descSearch: \"\",\r\n            tagSearch: \"\",\r\n        };\r\n    }\r\n    handleDescSearchEntry = (event) => {\r\n        this.setState({\r\n            descSearch: event.target.value\r\n        });\r\n    }\r\n\r\n    handleTagSearchEntry = (event) => {\r\n        this.setState({\r\n            tagSearch: event.target.value\r\n        });\r\n    }\r\n\r\n    searchUpdate(list) {\r\n\r\n        let outputList = [];\r\n\r\n        if(this.state.descSearch === \"\" && this.state.tagSearch === \"\")\r\n            return list;\r\n\r\n        for(let element of list) {\r\n\r\n            if(this.state.descSearch !== \"\" && element.desc.includes(this.state.descSearch)) {\r\n                outputList.push(element);\r\n            } else if(this.state.tagSearch !== \"\") {\r\n                let tags = element.tags.split(/[\\s,]+/);\r\n\r\n                let tagsFromSearch = this.state.tagSearch.split(/[\\s,]+/);\r\n\r\n                var arrayLength = tagsFromSearch.length;\r\n                for (let i = 0; i < tags.length; i++){\r\n                    let exit = false;\r\n                    for (let j = 0; j < arrayLength; j++) {\r\n                        if(tags[i].includes(tagsFromSearch[j])){\r\n                            outputList.push(element);\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (exit) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return outputList;\r\n    }\r\n\r\n    render() {\r\n\r\n        let list = this.props.getGroupList();\r\n\r\n\r\n        let out = this.searchUpdate(list);\r\n\r\n        const myList = out.map(it => (\r\n            <GroupBox name={it.name} desc={it.desc} email={it.email} tags={it.tags} members={it.members} key={hashCode(it.email + it.name)}/>\r\n        ));\r\n\r\n        return (\r\n            //React.Fragment\r\n            <>\r\n                <div className=\"frame\">\r\n                    <div className=\"container cont\">\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Wyszukuj po opisie i nazwie</span>\r\n                            </div>\r\n                            <input type=\"text\" name=\"descSearch\" value={this.state.descSearch} id=\"searchDesc\" className=\"form-control\" aria-label=\"Small\" onInput={this.handleDescSearchEntry} aria-describedby=\"inputGroup-sizing-sm\"/>\r\n                        </div>\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Wyszukuj po tagach</span>\r\n                            </div>\r\n                            <input type=\"text\" name=\"tagSearch\" value={this.state.tagSearch} id=\"searchTags\" className=\"form-control\" aria-label=\"Small\" onInput={this.handleTagSearchEntry} aria-describedby=\"inputGroup-sizing-sm\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <NumberOfGroups amountOfGroups={out.length}/>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"frame\">\r\n                    <ul className=\"list-group\">\r\n                        {myList}\r\n                    </ul>\r\n                </div>\r\n                \r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupSearch;","import { React, Component } from 'react';\r\n\r\nclass AddMember extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        showWarning: false\r\n    }\r\n\r\n    errorMessage = \"Członek z danym e-mailem i imieniem już istnieje.\"\r\n\r\n    handleNameEntry = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    handleEmailEntry = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    AddMemberToGroup = () => {\r\n        if(this.state.name === \"\" || this.state.email === \"\" )\r\n            return;\r\n        \r\n        let found = false;\r\n        for(var i = 0; i < this.props.members.length; i++) {\r\n            if (this.props.members[i].email === this.state.email && this.props.members[i].name === this.state.name) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if(found){\r\n            this.setState({\r\n                showWarning: true\r\n            });\r\n            return;\r\n        }\r\n        \r\n        this.props.addMember(this.state.name, this.state.email)\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            showWarning: false\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //React.Fragment\r\n            <>\r\n                <div className=\"frame\">\r\n                    <h2>Dodawanie członka do grupy</h2>\r\n                    <AddMemberBox\r\n                    name={this.state.name}\r\n                    handleOnNameChange={this.handleNameEntry}\r\n\r\n\r\n                    email={this.state.email}\r\n                    handleOnEmailChange={this.handleEmailEntry}\r\n\r\n                    />\r\n                    {this.state.showWarning && <h3 style={{color: \"red\"}}>{this.errorMessage}</h3> }\r\n\r\n                    <button className=\"btn btn-primary\" onClick={this.AddMemberToGroup}>Dodaj członka do grupy</button>\r\n\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst AddMemberBox = (props) => {\r\n    return (\r\n        <div className= \"space\">\r\n\r\n            <div className=\"container cont\">\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Imie:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newName\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.name}\r\n                    onChange={props.handleOnNameChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input-group input-group-sm mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Email:</span>\r\n                    </div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"newDesc\"\r\n                    className=\"form-control\" \r\n                    aria-label=\"Small\"\r\n                    value={props.email}\r\n                    onChange={props.handleOnEmailChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddMember;","import { React, Component } from 'react';\r\n\r\nimport {MemberBox, NumberOfMembers, hashCode} from './Support'\r\n\r\nclass MemberSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n     \r\n        this.state = {\r\n            nameSearch: \"\",\r\n        };\r\n    }\r\n    handleNameSearchEntry = (event) => {\r\n        this.setState({\r\n            nameSearch: event.target.value\r\n        });\r\n    }\r\n\r\n    searchUpdate(list) {\r\n\r\n        let outputList = [];\r\n\r\n        if(this.state.nameSearch === \"\")\r\n            return list;\r\n\r\n        for(let element of list) {\r\n\r\n            if(this.state.nameSearch !== \"\" && element.name.includes(this.state.nameSearch)) {\r\n                outputList.push(element);\r\n            } \r\n        }\r\n\r\n        return outputList;\r\n    }\r\n\r\n    render() {\r\n\r\n        let list = this.props.members;\r\n\r\n\r\n        let out = this.searchUpdate(list);\r\n\r\n        const myList = out.map(it => (\r\n            <MemberBox name={it.name} email={it.email} removeMember={this.props.removeMember} key={hashCode(it.email + it.name)} />\r\n        ));\r\n\r\n        return (\r\n            //React.Fragment\r\n            <>\r\n                <div className=\"frame\">\r\n                    <div className=\"container cont\">\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm2\">Wyszukuj po opisie</span>\r\n                            </div>\r\n                            <input type=\"text\" name=\"descSearch\" value={this.state.nameSearch} id=\"searchDesc\" className=\"form-control\" aria-label=\"Small\" onInput={this.handleNameSearchEntry} aria-describedby=\"inputGroup-sizing-sm\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <NumberOfMembers amountOfMembers={out.length}/>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"frame\">\r\n                    <ul className=\"list-group\">\r\n                        {myList}\r\n                    </ul>\r\n                </div>\r\n                \r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemberSearch;","import { React, Component } from 'react';\r\n\r\nimport {AddGroupBox, NumberOfMembers} from './Support';\r\n\r\nimport AddMember from './AddMember';\r\nimport MemberSearch from './MemberSearch';\r\n\r\nimport Data from '../../data/data';\r\nimport emailjs from 'emailjs-com';\r\n\r\nclass AddGroup extends Component {\r\n\r\n    state = {\r\n        newNameValue: \"\",\r\n        newDescValue: \"\",\r\n        newEmailValue: \"\",\r\n        newTagsValue: \"\",\r\n        showWarning: false,\r\n        members: []\r\n    }\r\n    errorMessage = \"Grupa z danym e-mailem i nazwą już istnieje lub email jest nieprawidłowy.\"\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addGroupToList = props.addGroup;\r\n    }\r\n\r\n    handleNameEntry = (event) => {\r\n        this.setState({\r\n            newNameValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleDescEntry = (event) => {\r\n        this.setState({\r\n            newDescValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleEmailEntry = (event) => {\r\n        this.setState({\r\n            newEmailValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleTaggsEntry = (event) => {\r\n        this.setState({\r\n            newTagsValue: event.target.value\r\n        });\r\n    }\r\n\r\n    AddMember = (name, email) => {\r\n        this.setState({\r\n            members: this.state.members.concat({name: name, email: email})\r\n        });\r\n        \r\n    }\r\n\r\n    AddNewGroup = (event) => {\r\n\r\n        let group = {\r\n            name: this.state.newNameValue,\r\n            desc: this.state.newDescValue,\r\n            email: this.state.newEmailValue,\r\n            tags: this.state.newTagsValue,\r\n            members: this.state.members\r\n        }\r\n\r\n        if(this.state.newNameValue === \"\" || this.state.newDescValue === \"\" || this.state.newEmailValue === \"\" ||  this.state.newTagsValue === \"\")\r\n            return;\r\n\r\n        let groups = this.props.getGroupList();\r\n\r\n        let found = false;\r\n        for(var i = 0; i < groups.length; i++) {\r\n            if (groups[i].email === group.email && groups[i].name === group.name) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(found){\r\n            this.setState({\r\n                showWarning: true\r\n            });\r\n        } else {\r\n \r\n            let path = window.location.hostname + \":\" + window.location.port + \"/editGroup?id=\" + groups.length\r\n\r\n            emailjs.send(\r\n                Data.SERVICE_ID, Data.TEMPLATE_ID_GROUP,\r\n                {   \r\n                    name: this.state.newNameValue, \r\n                    receiver: this.state.newEmailValue,\r\n                    message: path\r\n                }, Data.USER_ID\r\n\r\n            ).then(res => {\r\n                this.setState({\r\n                    newNameValue: \"\",\r\n                    newDescValue: \"\",\r\n                    newEmailValue: \"\",\r\n                    newTagsValue: \"\",\r\n                    members: [],\r\n                    showWarning: false\r\n                });\r\n                this.props.addGroup(group)\r\n            }).catch(err => {\r\n                this.setState({\r\n                    showWarning: true\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    removeMemberFromList = (name, email) => {\r\n        let obj = {name: name, email: email};\r\n        debugger\r\n        let array = this.state.members;\r\n\r\n        const index = array.findIndex(o => o.name === obj.name && o.email === obj.email );\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n        }\r\n\r\n        this.setState({\r\n            members: array\r\n        })\r\n\r\n    }\r\n\r\n    // it => ( )\r\n    render() {\r\n        return (\r\n            //React.Fragment\r\n            <>\r\n                <div className=\"frame\">\r\n                    <h2>Dodawanie nowej grupy</h2>\r\n                    <AddGroupBox\r\n                    newNameValue={this.state.newNameValue}\r\n                    handleOnNameChange={this.handleNameEntry}\r\n\r\n\r\n                    newDescValue={this.state.newDescValue}\r\n                    handleOnDescChange={this.handleDescEntry}\r\n\r\n\r\n                    newEmailValue={this.state.newEmailValue}\r\n                    handleOnEmailChange={this.handleEmailEntry}\r\n  \r\n                    newTagsValue={this.state.newTagsValue}\r\n                    handleOnTagsChange={this.handleTaggsEntry}\r\n                    />\r\n                    {this.state.showWarning && <h3 style={{color: \"red\"}}>{this.errorMessage}</h3> }\r\n\r\n                    <button className=\"btn btn-primary\" onClick={this.AddNewGroup}>Dodaj grupę</button>\r\n\r\n                    <AddMember addMember={this.AddMember} members={this.state.members}/>\r\n                    <MemberSearch members={this.state.members} removeMember={this.removeMemberFromList}/>\r\n\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGroup;","import { React, Component } from 'react';\r\nimport {Student, AddStudentBox} from './Support';\r\n\r\nimport '../../styles/styleStudents.css';\r\n\r\nimport Data from '../../data/data';\r\n\r\nimport emailjs from 'emailjs-com';\r\n\r\nclass EditUser extends Component {\r\n\r\n    state = {\r\n        newNameValue: \"\",\r\n        newDescValue: \"\",\r\n        newEmailValue: \"\",\r\n        newTagsValue: \"\",\r\n        showWarning: false,\r\n        prevEmail: \"\",\r\n        id: -1\r\n    }\r\n    errorMessage = \"Student z danym e-mailem i imieniem już istnieje lub email jest niepoprawny.\"\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        let params = window.location.search.substring(1);\r\n        params = params.split(\"&\");\r\n\r\n        console.log(params);\r\n        let paramV = params.map(it => ({param: it.split(\"=\")[0], value: it.split(\"=\")[1]}));\r\n\r\n        this.state = {\r\n            newNameValue: \"\",\r\n            newDescValue: \"\",\r\n            newEmailValue: \"\",\r\n            newTagsValue: \"\",\r\n            prevEmail: \"\",\r\n            showWarning: false,\r\n            id: -1\r\n        }\r\n\r\n        let students = this.props.students()\r\n        let id = -1;\r\n        debugger\r\n        for(let i of paramV){\r\n            if (i.param === \"id\"){\r\n                if(i.value < students.length){\r\n                    id = i.value;\r\n                } \r\n            }\r\n        }\r\n\r\n        if(id !== -1){\r\n            this.state = {\r\n                newNameValue: students[id].name,\r\n                newDescValue: students[id].desc,\r\n                newEmailValue: students[id].email,\r\n                newTagsValue: students[id].tags,\r\n                prevEmail: students[id].email,\r\n                showWarning: false,\r\n                id: id\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    handleNameEntry = (event) => {\r\n        this.setState({\r\n            newNameValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleDescEntry = (event) => {\r\n        this.setState({\r\n            newDescValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleEmailEntry = (event) => {\r\n        this.setState({\r\n            newEmailValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleTaggsEntry = (event) => {\r\n        this.setState({\r\n            newTagsValue: event.target.value\r\n        });\r\n    }\r\n\r\n    \r\n    saveStudent = (event) => {\r\n\r\n        let student = new Student(this.state.newNameValue, this.state.newDescValue, this.state.newEmailValue,  this.state.newTagsValue)\r\n\r\n        if(this.state.newNameValue === \"\" || this.state.newDescValue === \"\" || this.state.newEmailValue === \"\" ||  this.state.newTagsValue === \"\")\r\n            return;\r\n\r\n        let students = this.props.students();\r\n\r\n        let found = false;\r\n        for(var i = 0; i < students.length; i++) {\r\n            if (students[i].email === student.email && students[i].name === student.name) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(this.state.prevEmail === this.state.newEmailValue) {\r\n            found = false;\r\n        }\r\n\r\n        if(found){\r\n            this.setState({\r\n                showWarning: true\r\n            });\r\n        } else {\r\n            let path = window.location.hostname + \":\" + window.location.port + \"/editStudent?id=\" + this.state.id;\r\n\r\n            emailjs.send(\r\n                Data.SERVICE_ID, Data.TEMPLATE_ID_STUDENT,\r\n                {   \r\n                    name: this.state.newNameValue, \r\n                    receiver: this.state.newEmailValue,\r\n                    message: path\r\n                }, Data.USER_ID\r\n\r\n            ).then(res => {\r\n                this.setState({\r\n                    showWarning: false\r\n                });\r\n                this.props.save(this.state.id, student);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    showWarning: true\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // it => ( )\r\n    render() {\r\n\r\n        if(this.state.id !== -1){\r\n            return (\r\n                //React.Fragment\r\n                <>\r\n                    <div className=\"frame\">\r\n                        <h2>Edytowanie studenta</h2>\r\n                        <AddStudentBox\r\n                        newNameValue={this.state.newNameValue}\r\n                        handleOnNameChange={this.handleNameEntry}\r\n    \r\n    \r\n                        newDescValue={this.state.newDescValue}\r\n                        handleOnDescChange={this.handleDescEntry}\r\n    \r\n    \r\n                        newEmailValue={this.state.newEmailValue}\r\n                        handleOnEmailChange={this.handleEmailEntry}\r\n      \r\n                        newTagsValue={this.state.newTagsValue}\r\n                        handleOnTagsChange={this.handleTaggsEntry}\r\n                        />\r\n                        {this.state.showWarning && <h3 style={{color: \"red\"}}>{this.errorMessage}</h3> }\r\n    \r\n                        <button className=\"btn btn-primary\" onClick={this.saveStudent}>Zapisz studenta</button>\r\n                    </div>\r\n    \r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                <h2>Nie znaleziono studenta.</h2>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EditUser;","import { React, Component } from 'react';\r\n\r\nimport {AddGroupBox, NumberOfMembers} from './Support';\r\n\r\nimport AddMember from './AddMember';\r\nimport MemberSearch from './MemberSearch';\r\n\r\nimport Data from '../../data/data';\r\nimport emailjs from 'emailjs-com';\r\n\r\nclass EditGroup extends Component {\r\n\r\n    state = {\r\n        newNameValue: \"\",\r\n        newDescValue: \"\",\r\n        newEmailValue: \"\",\r\n        newTagsValue: \"\",\r\n        showWarning: false,\r\n        prevEmail: \"\",\r\n        members: [],\r\n        id: -1\r\n    }\r\n    errorMessage = \"Grupa z danym e-mailem i nazwą już istnieje lub email jest niepoprawny.\"\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addGroupToList = props.addGroup;\r\n\r\n        let params = window.location.search.substring(1);\r\n        params = params.split(\"&\");\r\n\r\n        let paramV = params.map(it => ({param: it.split(\"=\")[0], value: it.split(\"=\")[1]}));\r\n\r\n        this.state = {\r\n            newNameValue: \"\",\r\n            newDescValue: \"\",\r\n            newEmailValue: \"\",\r\n            newTagsValue: \"\",\r\n            showWarning: false,\r\n            prevEmail: \"\",\r\n            members: [],\r\n            id: -1\r\n        }\r\n\r\n        let groups = this.props.getGroupList();\r\n        let id = -1;\r\n        for(let i of paramV){\r\n            if (i.param === \"id\"){\r\n                if(i.value < groups.length){\r\n                    id = i.value;\r\n                } \r\n            }\r\n        }\r\n\r\n        if(id !== -1){\r\n            this.state = {\r\n                newNameValue: groups[id].name,\r\n                newDescValue: groups[id].desc,\r\n                newEmailValue: groups[id].email,\r\n                newTagsValue: groups[id].tags,\r\n                prevEmail: groups[id].email,\r\n                members: groups[id].members,\r\n                showWarning: false,\r\n                id: id\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleNameEntry = (event) => {\r\n        this.setState({\r\n            newNameValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleDescEntry = (event) => {\r\n        this.setState({\r\n            newDescValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleEmailEntry = (event) => {\r\n        this.setState({\r\n            newEmailValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleTaggsEntry = (event) => {\r\n        this.setState({\r\n            newTagsValue: event.target.value\r\n        });\r\n    }\r\n\r\n    AddMember = (name, email) => {\r\n        this.setState({\r\n            members: this.state.members.concat({name: name, email: email})\r\n        });\r\n        \r\n    }\r\n\r\n    SaveGroup = (event) => {\r\n\r\n        let group = {\r\n            name: this.state.newNameValue,\r\n            desc: this.state.newDescValue,\r\n            email: this.state.newEmailValue,\r\n            tags: this.state.newTagsValue,\r\n            members: this.state.members\r\n        }\r\n\r\n        if(this.state.newNameValue === \"\" || this.state.newDescValue === \"\" || this.state.newEmailValue === \"\" ||  this.state.newTagsValue === \"\")\r\n            return;\r\n\r\n        let groups = this.props.getGroupList();\r\n\r\n        let found = false;\r\n        for(var i = 0; i < groups.length; i++) {\r\n            if (groups[i].email === group.email && groups[i].name === group.name) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(this.state.prevEmail === this.state.newEmailValue) {\r\n            found = false;\r\n        }\r\n\r\n        if(found){\r\n            this.setState({\r\n                showWarning: true\r\n            });\r\n        } else {\r\n    \r\n            let path = window.location.hostname + \":\" + window.location.port + \"/editGroup?id=\" + this.state.id;\r\n\r\n            emailjs.send(\r\n                Data.SERVICE_ID, Data.TEMPLATE_ID_GROUP,\r\n                {   \r\n                    name: this.state.newNameValue, \r\n                    receiver: this.state.newEmailValue,\r\n                    message: path\r\n                }, Data.USER_ID\r\n\r\n            ).then(res => {\r\n                this.setState({\r\n                    showWarning: false\r\n                });\r\n                this.props.save(this.state.id, group);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    showWarning: true\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    removeMemberFromList = (name, email) => {\r\n        let obj = {name: name, email: email};\r\n        debugger\r\n        let array = this.state.members;\r\n\r\n        const index = array.findIndex(o => o.name === obj.name && o.email === obj.email );\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n        }\r\n\r\n        this.setState({\r\n            members: array\r\n        })\r\n\r\n    }\r\n\r\n    // it => ( )\r\n    render() {\r\n\r\n        if(this.state.id !== -1){\r\n            return (\r\n                //React.Fragment\r\n                <>\r\n                    <div className=\"frame\">\r\n                        <h2>Edycja grupy</h2>\r\n                        <AddGroupBox\r\n                        newNameValue={this.state.newNameValue}\r\n                        handleOnNameChange={this.handleNameEntry}\r\n    \r\n    \r\n                        newDescValue={this.state.newDescValue}\r\n                        handleOnDescChange={this.handleDescEntry}\r\n    \r\n    \r\n                        newEmailValue={this.state.newEmailValue}\r\n                        handleOnEmailChange={this.handleEmailEntry}\r\n      \r\n                        newTagsValue={this.state.newTagsValue}\r\n                        handleOnTagsChange={this.handleTaggsEntry}\r\n                        />\r\n                        {this.state.showWarning && <h3 style={{color: \"red\"}}>{this.errorMessage}</h3> }\r\n    \r\n                        <button className=\"btn btn-primary\" onClick={this.SaveGroup}>Zapisz</button>\r\n    \r\n                        <AddMember addMember={this.AddMember} members={this.state.members}/>\r\n                        <MemberSearch members={this.state.members} removeMember={this.removeMemberFromList}/>\r\n    \r\n                    </div>\r\n    \r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                <h2>Nie znaleziono grupy.</h2>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EditGroup;","import { React, Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport AddUser from './students/AddUser';\r\nimport Search from './students/Search';\r\nimport GroupSearch from './groups/GroupSearch';\r\n\r\nimport '../styles/styleStudents.css';\r\nimport AddGroup from './groups/AddGroup';\r\nimport EditUser from './students/EditUser';\r\nimport EditGroup from './groups/EditGroup';\r\n\r\n\r\nimport USER_ID from '../data/data';\r\nimport emailjs from 'emailjs-com';\r\nemailjs.init(USER_ID);\r\n\r\nclass Main extends Component {\r\n\r\n    state = {\r\n        students: [],\r\n        groups: []\r\n    }\r\n\r\n    addStudent = (student) => {\r\n        //this.setState({\r\n        //    students: this.state.students.concat(student)\r\n        //});\r\n        \r\n        let sList = localStorage.getItem('lab5students');\r\n        sList = JSON.parse(sList);\r\n        sList = sList.concat(student);\r\n        localStorage.setItem('lab5students', JSON.stringify(sList) );\r\n    }\r\n\r\n    addGroup = (group) => {\r\n        //this.setState({\r\n        //    groups: this.state.groups.concat(group)\r\n        //});\r\n        let gList = localStorage.getItem('lab5groups');\r\n        gList = JSON.parse(gList);\r\n        gList = gList.concat(group);\r\n        localStorage.setItem('lab5groups', JSON.stringify(gList) );\r\n    }\r\n\r\n    saveStudent = (id, student) => {\r\n        let sList = localStorage.getItem('lab5students');\r\n        sList = JSON.parse(sList);\r\n        sList[id] = student;\r\n        localStorage.setItem('lab5students', JSON.stringify(sList) );\r\n    }\r\n\r\n    saveGroup = (id, group) => {\r\n        let gList = localStorage.getItem('lab5groups');\r\n        gList = JSON.parse(gList);\r\n        gList[id] = group;\r\n        localStorage.setItem('lab5groups', JSON.stringify(gList) );\r\n    }\r\n\r\n    getStudentsList = () => {\r\n        let sList = localStorage.getItem('lab5students');\r\n        if (sList === null){\r\n            localStorage.setItem('lab5students', JSON.stringify([]) );\r\n            sList = localStorage.getItem('lab5students');\r\n        }\r\n        //debugger\r\n        sList = JSON.parse(sList);\r\n        //debugger\r\n        return sList;\r\n        \r\n        \r\n    }\r\n\r\n    getGroupList = () => {\r\n        let gList = localStorage.getItem('lab5groups');\r\n        if (gList === null){\r\n            localStorage.setItem('lab5groups', JSON.stringify([]) );\r\n            gList = localStorage.getItem('lab5groups');\r\n        }\r\n        return JSON.parse(gList);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            //React.Fragment\r\n            <>\r\n\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                        <div className=\"myFloat\">\r\n                            <Search getStudentsList={this.getStudentsList}/>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/newStudent\">\r\n                        <div className=\"myFloat\">\r\n                            <AddUser addStudent={this.addStudent} students={this.getStudentsList}/>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/groups\">\r\n                        <div className=\"myFloat\">\r\n                            <GroupSearch getGroupList={this.getGroupList}/>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/newGroup\">\r\n                        <div className=\"myFloat\">\r\n                            <AddGroup addGroup={this.addGroup} getGroupList={this.getGroupList} getStudentsList={this.getStudentsList}/>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/editStudent\">\r\n                        <div className=\"myFloat\">\r\n                            <EditUser students={this.getStudentsList} save={this.saveStudent}/>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/editGroup\">\r\n                    <div className=\"myFloat\">\r\n                            <EditGroup save={this.saveGroup} getGroupList={this.getGroupList} getStudentsList={this.getStudentsList}/>\r\n                        </div>\r\n                    </Route>\r\n                    <Route>\r\n                        <section><h1>Error 404 - not found</h1></section>\r\n                    </Route>\r\n                </Switch>\r\n\r\n                \r\n                \r\n               \r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import './App.css';\nimport {\n  BrowserRouter as Router, NavLink\n} from \"react-router-dom\";\n\nimport Main from './components/Main.js';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <main>\n\n        <nav>\n          <div className=\"btn-div-frame space-app buttons-page-div\">\n          <NavLink to=\"/\" exact className=\"btn border-btn btn-select space-app center-btn\">Lista studentów</NavLink>\n          <NavLink to=\"/newStudent\" exact className=\"btn border-btn btn-select space-app center-btn\">Dodaj nowego studenta</NavLink>\n          <NavLink to=\"/groups\" exact className=\"btn border-btn btn-select space-app center-btn\">Lista grup</NavLink>\n          <NavLink to=\"/newGroup\" exact className=\"btn border-btn btn-select space-app center-btn\">Dodaj nową grupę</NavLink>\n          </div>\n        </nav>\n\n        <Main />\n\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}